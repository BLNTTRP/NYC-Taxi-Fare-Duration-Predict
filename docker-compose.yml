version: "3.2"
services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - shared_network

  api:
    image: flask_api
    container_name: ml_api
    build: 
      context: ./api
      target: build
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - model
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      DATABASE_HOST: $DATABASE_HOST
      SECRET_KEY: $SECRET_KEY
    networks:
      - shared_network

  model:
    image: ml_service
    container_name: ml_service
    build: 
      context: ./models
      dockerfile: ./Dockerfile
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
    networks:
      - shared_network
  
  ui:
    image: ml_ui
    container_name: ml_ui
    build:
      context: ./ui
      target: build
    ports:
      - "8501:8501"
    depends_on:
      - api
    environment:
      - API_HOST=api
      - API_PORT=5000
    networks:
      - shared_network

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - shared_network

  populate:
      build:
        context: ./api
        dockerfile: Dockerfile.populate
      depends_on:
        - db
      environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      networks:
        - shared_network
      restart: "no"
   

networks:
  shared_network:
    external: true

volumes:
  postgres_data: